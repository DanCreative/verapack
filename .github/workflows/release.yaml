name: release

on:
  push:
    tags:
      - "v*.*.*"

permissions:
  contents: write

jobs:
  build-app:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        arch: ["amd64"]
        os: ["windows"]
    timeout-minutes: 2

    steps:
    - uses: actions/checkout@v4

    - name: Set up Go
      id: go
      uses: actions/setup-go@v4
      with:
        go-version-file: go.mod

    - name: Go Tidy
      run: go mod tidy && git diff --exit-code

    - name: Go Mod
      run: go mod download

    - name: Go Mod Verify
      run: go mod verify
    
    - name: Build
      run: GOOS=${{ matrix.os }} GOARCH=${{ matrix.arch }} go build -o . -ldflags='-s -w -X "main.Version='${{ github.ref_name }}'"' ./cmd/verapack/

    - name: Create Archive
      run: |
        sudo apt-get install zip gzip tar
        mkdir out
        zip -j out/verapack-${{ matrix.os }}-${{ matrix.arch }}-${{ github.ref_name }}.zip verapack.*

    - name: Upload Artifacts
      uses: actions/upload-artifact@v4
      with:
        name: artefact-${{ matrix.os }}-${{ matrix.arch }}
        path: out/*.zip
        if-no-files-found: error
        overwrite: true       
    
  update-docs:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v5
      with:
        ref: "main"

    - name: Set version in Powershell install script
      run: |
        mkdir out
        sed 's/${version}/${{ github.ref_name }}/' install/Install.ps1 > Install.ps1

    - name: Minify PowerShell install script
      uses: StartAutomating/PSMinifier@v1.1.3
      with:
        Include: "Install.ps1"
    
    - name: Update README
      run: |
        value=$(tr -cd '\11\12\15\40-\176' < Install.min.ps1 | sed 's|\\|\\\\|g')
        echo $value
        sed -i "42s|.*|$value|" README.md

    - name: Commit changes
      run: |
        git config user.name "github-actions[bot]"
        git config user.email "41898282+github-actions[bot]@users.noreply.github.com"
        git switch -c auto-update-ps-readme
        git add README.md
        git commit -m "Updated README for tag: '${{ github.ref_name }}'"
        git push

        gh pr create --fill -a @DanCreative
      
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  release:
    runs-on: ubuntu-latest
    needs: build-app
    steps:
    - name: Download built artifacts
      uses: actions/download-artifact@v5
      with:
        merge-multiple: true
        path: out

    - name: List files
      id: file-list
      run: |
        {
          echo 'MULTILINE_FILE_LIST<<EOF'
          find out -type f
          echo EOF
        } >> "$GITHUB_OUTPUT"
        

    # Documentation: https://github.com/softprops/action-gh-release
    - name: Create Github Release
      uses: softprops/action-gh-release@v2.3.2
      with:
        generate_release_notes: true
        fail_on_unmatched_files: true
        files: ${{ steps.file-list.outputs.MULTILINE_FILE_LIST }}