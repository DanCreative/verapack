name: release

on:
  push:
    tags:
      - "v*.*.*"

jobs:
  build-app:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        arch: ["amd64"]
        os: ["windows"]
    timeout-minutes: 2

    steps:
    - uses: actions/checkout@v4

    - name: Set up Go
      id: go
      uses: actions/setup-go@v4
      with:
        go-version-file: go.mod

    - name: Go Tidy
      run: go mod tidy && git diff --exit-code

    - name: Go Mod
      run: go mod download

    - name: Go Mod Verify
      run: go mod verify
    
    - name: Build
      run: GOOS=${{ matrix.os }} GOARCH=${{ matrix.arch }} go build -o . -ldflags='-s -w -X "main.Version='${{ github.ref_name }}'"' ./cmd/verapack/

    - name: Create Archive
      run: |
        sudo apt-get install zip gzip tar
        mkdir out
        zip -j out/verapack-${{ matrix.os }}-${{ matrix.arch }}-${{ github.ref_name }}.zip verapack.*

    - name: Upload Artifacts
      uses: actions/upload-artifact@v4
      with:
        name: artefact-${{ matrix.os }}-${{ matrix.arch }}
        path: out/*.zip
        if-no-files-found: error
        overwrite: true       
    
  deploy-to-chocolatey:
    runs-on: windows-latest
    needs: build-app    
    if: ${{ vars.CHOCO_PUSH == 'true' }}
    steps:
    - name: Download and install choco cli
      shell: pwsh
      run: |
        Set-ExecutionPolicy Bypass -Scope Process -Force; [System.Net.ServicePointManager]::SecurityProtocol = [System.Net.ServicePointManager]::SecurityProtocol -bor 3072; iex ((New-Object System.Net.WebClient).DownloadString('https://community.chocolatey.org/install.ps1'))

    - name: Download built artifacts
      uses: actions/download-artifact@v5
      with:
        merge-multiple: true
        path: out

    - name: Create chocolatey package
      shell: pwsh
      run: |
        choco pack --version "${{ github.ref_name }}".Replace("v","") --outputdirectory choco .\.install\choco\verapack.nuspec

    - name: Push to Chocolatey community
      shell: pwsh
      run: |
        choco push ".\choco\verapack.$('${{ github.ref_name }}'.Replace('v','')).nupkg" -key ${{ secrets.CHOCO_API_KEY }}

  release:
    runs-on: ubuntu-latest
    needs: build-app
    steps:
    - name: Download built artifacts
      uses: actions/download-artifact@v5
      with:
        merge-multiple: true
        path: out

    - name: List files
      id: file-list
      run: |
        {
          echo 'MULTILINE_FILE_LIST<<EOF'
          find out -type f
          echo EOF
        } >> "$GITHUB_OUTPUT"
        

    # Documentation: https://github.com/softprops/action-gh-release
    - name: Create Github Release
      uses: softprops/action-gh-release@v2.3.2
      with:
        generate_release_notes: true
        fail_on_unmatched_files: true
        files: ${{ steps.file-list.outputs.MULTILINE_FILE_LIST }}